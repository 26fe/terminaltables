===================
terminaltables docs
===================

This branch holds generated `Sphinx <http://www.sphinx-doc.org/en/stable/>`_ docs for
`terminaltables <https://github.com/Robpol86/terminaltables>`_.

Documentation is generated by `Travis CI <https://travis-ci.org/Robpol86/terminaltables>`_ and hosted on
`GitHub Pages <https://pages.github.com/>`_.

Docs Build Mechanism
====================

Docs for all branches and tags are built automatically every time any of those branches/tags are pushed to GitHub. We
need to re-build ALL docs for ALL branches/tags when any of them change because of versioning. If we push v2.0.0 and a
user visits the documentation for this latest version, they will see a link to the v1.0.0 docs. The user will expect to
find a link to the v2.0.0 docs.

Same with branches. The user will expect to find a link to the docs in a feature branch from the master branch docs.
Since those links are hard-coded by Sphinx when it builds docs, we need to rebuild all docs every time any additional
version is added/removed. We don't want old docs from a since-deleted feature branch to persist if we don't commit
anything to master.

I've approached this problem using the following system:

Trigger Builds
--------------

The ``.travis.yml`` file in all master-derived branches/tags (not this one) will download ``trigger.sh`` and execute it
from that Travis CI job. Documentation source files are located in these branches but are not built there. Trigger
just causes the Travis CI job for this branch to fire.

Build Documentation
-------------------

The Travis CI job for this branch handles building all docs for all branches. It will checkout each branch and build
docs, committing generated HTML/asset files to this branch. The job will also clean up any docs for since-deleted
branches/tags.

Race Condition Mitigation
-------------------------

When happens when multiple people push to GitHub or if Travis jobs run out of order (or simultaneous jobs finish in the
wrong order)?

Every time the trigger or build jobs attempt to push to GitHub, the git command used will enable atomic pushes, so if
there are any conflicts git won't auto-merge anything, just abort. We will retry when this happens up to a certain
number of times.

TODO: finish this section.
